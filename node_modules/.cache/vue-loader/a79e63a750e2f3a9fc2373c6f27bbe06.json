{"remainingRequest":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\src\\components\\Cards\\ChartCard.vue","mtime":1709832973265},{"path":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\source\\vue\\vue-light-bootstrap-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIGltcG9ydCBDYXJkIGZyb20gJy4vQ2FyZC52dWUnDQoNCiAgZXhwb3J0IGRlZmF1bHQgew0KICAgIG5hbWU6ICdjaGFydC1jYXJkJywNCiAgICBjb21wb25lbnRzOiB7DQogICAgICBDYXJkDQogICAgfSwNCiAgICBwcm9wczogew0KICAgICAgY2hhcnRUeXBlOiB7DQogICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgZGVmYXVsdDogJ0xpbmUnIC8vIExpbmUgfCBQaWUgfCBCYXINCiAgICAgIH0sDQogICAgICBjaGFydE9wdGlvbnM6IHsNCiAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgICAgcmV0dXJuIHt9DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBjaGFydERhdGE6IHsNCiAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIGxhYmVsczogW10sDQogICAgICAgICAgICBzZXJpZXM6IFtdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9LA0KICAgICAgcmVzcG9uc2l2ZU9wdGlvbnM6IFtPYmplY3QsIEFycmF5XQ0KICAgIH0sDQogICAgZGF0YSAoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBjaGFydElkOiAnbm8taWQnLA0KICAgICAgICAkQ2hhcnRpc3Q6IG51bGwsDQogICAgICAgIGNoYXJ0OiBudWxsDQogICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAvKioqDQogICAgICAgKiBJbml0aWFsaXplcyB0aGUgY2hhcnQgYnkgbWVyZ2luZyB0aGUgY2hhcnQgb3B0aW9ucyBzZW50IHZpYSBwcm9wcyBhbmQgdGhlIGRlZmF1bHQgY2hhcnQgb3B0aW9ucw0KICAgICAgICovDQogICAgICBpbml0Q2hhcnQgKCkgew0KICAgICAgICB2YXIgY2hhcnRJZFF1ZXJ5ID0gYCMke3RoaXMuY2hhcnRJZH1gDQogICAgICAgIHRoaXMuY2hhcnQgPSB0aGlzLiRDaGFydGlzdFt0aGlzLmNoYXJ0VHlwZV0oY2hhcnRJZFF1ZXJ5LCB0aGlzLmNoYXJ0RGF0YSwgdGhpcy5jaGFydE9wdGlvbnMsIHRoaXMucmVzcG9uc2l2ZU9wdGlvbnMpDQogICAgICAgIHRoaXMuJGVtaXQoJ2luaXRpYWxpemVkJywgdGhpcy5jaGFydCkNCiAgICAgICAgaWYgKHRoaXMuY2hhcnRUeXBlID09PSAnTGluZScpIHsNCiAgICAgICAgICB0aGlzLmFuaW1hdGVMaW5lQ2hhcnQoKQ0KICAgICAgICB9DQogICAgICAgIGlmICh0aGlzLmNoYXJ0VHlwZSA9PT0gJ0JhcicpIHsNCiAgICAgICAgICB0aGlzLmFuaW1hdGVCYXJDaGFydCgpDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICAvKioqDQogICAgICAgKiBBc3NpZ25zIGEgcmFuZG9tIGlkIHRvIHRoZSBjaGFydA0KICAgICAgICovDQogICAgICB1cGRhdGVDaGFydElkICgpIHsNCiAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKS50b1N0cmluZygpDQogICAgICAgIGNvbnN0IHJhbmRvbUludCA9IHRoaXMuZ2V0UmFuZG9tSW50KDAsIGN1cnJlbnRUaW1lKQ0KICAgICAgICB0aGlzLmNoYXJ0SWQgPSBgZGl2XyR7cmFuZG9tSW50fWANCiAgICAgIH0sDQogICAgICBnZXRSYW5kb21JbnQgKG1pbiwgbWF4KSB7DQogICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluDQogICAgICB9LA0KICAgICAgYW5pbWF0ZUxpbmVDaGFydCAoKSB7DQogICAgICAgIGxldCBzZXEgPSAwDQogICAgICAgIGxldCBkdXJhdGlvbnMgPSA1MDANCiAgICAgICAgbGV0IGRlbGF5cyA9IDgwDQogICAgICAgIHRoaXMuY2hhcnQub24oJ2RyYXcnLCAoZGF0YSkgPT4gew0KICAgICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdsaW5lJyB8fCBkYXRhLnR5cGUgPT09ICdhcmVhJykgew0KICAgICAgICAgICAgZGF0YS5lbGVtZW50LmFuaW1hdGUoew0KICAgICAgICAgICAgICBkOiB7DQogICAgICAgICAgICAgICAgYmVnaW46IDYwMCwNCiAgICAgICAgICAgICAgICBkdXI6IDcwMCwNCiAgICAgICAgICAgICAgICBmcm9tOiBkYXRhLnBhdGguY2xvbmUoKS5zY2FsZSgxLCAwKS50cmFuc2xhdGUoMCwgZGF0YS5jaGFydFJlY3QuaGVpZ2h0KCkpLnN0cmluZ2lmeSgpLA0KICAgICAgICAgICAgICAgIHRvOiBkYXRhLnBhdGguY2xvbmUoKS5zdHJpbmdpZnkoKSwNCiAgICAgICAgICAgICAgICBlYXNpbmc6IHRoaXMuJENoYXJ0aXN0LlN2Zy5FYXNpbmcuZWFzZU91dFF1aW50DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICdwb2ludCcpIHsNCiAgICAgICAgICAgIHNlcSsrDQogICAgICAgICAgICBkYXRhLmVsZW1lbnQuYW5pbWF0ZSh7DQogICAgICAgICAgICAgIG9wYWNpdHk6IHsNCiAgICAgICAgICAgICAgICBiZWdpbjogc2VxICogZGVsYXlzLA0KICAgICAgICAgICAgICAgIGR1cjogZHVyYXRpb25zLA0KICAgICAgICAgICAgICAgIGZyb206IDAsDQogICAgICAgICAgICAgICAgdG86IDEsDQogICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZScNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIHNlcSA9IDANCiAgICAgIH0sDQogICAgICBhbmltYXRlQmFyQ2hhcnQgKCkgew0KICAgICAgICBsZXQgc2VxID0gMA0KICAgICAgICBsZXQgZHVyYXRpb25zID0gNTAwDQogICAgICAgIGxldCBkZWxheXMgPSA4MA0KICAgICAgICB0aGlzLmNoYXJ0Lm9uKCdkcmF3JywgKGRhdGEpID0+IHsNCiAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnYmFyJykgew0KICAgICAgICAgICAgc2VxKysNCiAgICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsNCiAgICAgICAgICAgICAgb3BhY2l0eTogew0KICAgICAgICAgICAgICAgIGJlZ2luOiBzZXEgKiBkZWxheXMsDQogICAgICAgICAgICAgICAgZHVyOiBkdXJhdGlvbnMsDQogICAgICAgICAgICAgICAgZnJvbTogMCwNCiAgICAgICAgICAgICAgICB0bzogMSwNCiAgICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlJw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgIH0NCiAgICB9LA0KICAgIGFzeW5jIG1vdW50ZWQgKCkgew0KICAgICAgdGhpcy51cGRhdGVDaGFydElkKCkNCiAgICAgIGNvbnN0IENoYXJ0aXN0ID0gYXdhaXQgaW1wb3J0KCdjaGFydGlzdCcpDQogICAgICB0aGlzLiRDaGFydGlzdCA9IENoYXJ0aXN0LmRlZmF1bHQgfHwgQ2hhcnRpc3QNCiAgICAgIHRoaXMuaW5pdENoYXJ0KCkNCiAgICB9DQogIH0NCg=="},{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";AAcfile":"ChartCard.vue","sourceRoot":"src/components/Cards","sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" v-if=\"$slots.header\">\r\n      <slot name=\"header\"></slot>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\r\n    </div>\r\n    <div class=\"card-footer\" v-if=\"$slots.footer\">\r\n      <slot name=\"footer\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import Card from './Card.vue'\r\n\r\n  export default {\r\n    name: 'chart-card',\r\n    components: {\r\n      Card\r\n    },\r\n    props: {\r\n      chartType: {\r\n        type: String,\r\n        default: 'Line' // Line | Pie | Bar\r\n      },\r\n      chartOptions: {\r\n        type: Object,\r\n        default: () => {\r\n          return {}\r\n        }\r\n      },\r\n      chartData: {\r\n        type: Object,\r\n        default: () => {\r\n          return {\r\n            labels: [],\r\n            series: []\r\n          }\r\n        }\r\n      },\r\n      responsiveOptions: [Object, Array]\r\n    },\r\n    data () {\r\n      return {\r\n        chartId: 'no-id',\r\n        $Chartist: null,\r\n        chart: null\r\n      }\r\n    },\r\n    methods: {\r\n      /***\r\n       * Initializes the chart by merging the chart options sent via props and the default chart options\r\n       */\r\n      initChart () {\r\n        var chartIdQuery = `#${this.chartId}`\r\n        this.chart = this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.responsiveOptions)\r\n        this.$emit('initialized', this.chart)\r\n        if (this.chartType === 'Line') {\r\n          this.animateLineChart()\r\n        }\r\n        if (this.chartType === 'Bar') {\r\n          this.animateBarChart()\r\n        }\r\n      },\r\n      /***\r\n       * Assigns a random id to the chart\r\n       */\r\n      updateChartId () {\r\n        const currentTime = new Date().getTime().toString()\r\n        const randomInt = this.getRandomInt(0, currentTime)\r\n        this.chartId = `div_${randomInt}`\r\n      },\r\n      getRandomInt (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n      },\r\n      animateLineChart () {\r\n        let seq = 0\r\n        let durations = 500\r\n        let delays = 80\r\n        this.chart.on('draw', (data) => {\r\n          if (data.type === 'line' || data.type === 'area') {\r\n            data.element.animate({\r\n              d: {\r\n                begin: 600,\r\n                dur: 700,\r\n                from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n                to: data.path.clone().stringify(),\r\n                easing: this.$Chartist.Svg.Easing.easeOutQuint\r\n              }\r\n            })\r\n          } else if (data.type === 'point') {\r\n            seq++\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            })\r\n          }\r\n        })\r\n        seq = 0\r\n      },\r\n      animateBarChart () {\r\n        let seq = 0\r\n        let durations = 500\r\n        let delays = 80\r\n        this.chart.on('draw', (data) => {\r\n          if (data.type === 'bar') {\r\n            seq++\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async mounted () {\r\n      this.updateChartId()\r\n      const Chartist = await import('chartist')\r\n      this.$Chartist = Chartist.default || Chartist\r\n      this.initChart()\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"]}]}