{"remainingRequest":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\source\\vue-light-bootstrap-dashboard\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\src\\components\\Cards\\ChartCard.vue","mtime":1709832973265},{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\.babelrc","mtime":1709832973220},{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue\\source\\vue-light-bootstrap-dashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovdnVlL3NvdXJjZS92dWUtbGlnaHQtYm9vdHN0cmFwLWRhc2hib2FyZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0IENhcmQgZnJvbSAiLi9DYXJkLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhcnQtY2FyZCcsCiAgY29tcG9uZW50czogewogICAgQ2FyZDogQ2FyZAogIH0sCiAgcHJvcHM6IHsKICAgIGNoYXJ0VHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdMaW5lJyAvLyBMaW5lIHwgUGllIHwgQmFyCiAgICB9LAogICAgY2hhcnRPcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgY2hhcnREYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsczogW10sCiAgICAgICAgICBzZXJpZXM6IFtdCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIHJlc3BvbnNpdmVPcHRpb25zOiBbT2JqZWN0LCBBcnJheV0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydElkOiAnbm8taWQnLAogICAgICAkQ2hhcnRpc3Q6IG51bGwsCiAgICAgIGNoYXJ0OiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLyoqKg0KICAgICAqIEluaXRpYWxpemVzIHRoZSBjaGFydCBieSBtZXJnaW5nIHRoZSBjaGFydCBvcHRpb25zIHNlbnQgdmlhIHByb3BzIGFuZCB0aGUgZGVmYXVsdCBjaGFydCBvcHRpb25zDQogICAgICovCiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdmFyIGNoYXJ0SWRRdWVyeSA9ICIjIi5jb25jYXQodGhpcy5jaGFydElkKTsKICAgICAgdGhpcy5jaGFydCA9IHRoaXMuJENoYXJ0aXN0W3RoaXMuY2hhcnRUeXBlXShjaGFydElkUXVlcnksIHRoaXMuY2hhcnREYXRhLCB0aGlzLmNoYXJ0T3B0aW9ucywgdGhpcy5yZXNwb25zaXZlT3B0aW9ucyk7CiAgICAgIHRoaXMuJGVtaXQoJ2luaXRpYWxpemVkJywgdGhpcy5jaGFydCk7CiAgICAgIGlmICh0aGlzLmNoYXJ0VHlwZSA9PT0gJ0xpbmUnKSB7CiAgICAgICAgdGhpcy5hbmltYXRlTGluZUNoYXJ0KCk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuY2hhcnRUeXBlID09PSAnQmFyJykgewogICAgICAgIHRoaXMuYW5pbWF0ZUJhckNoYXJ0KCk7CiAgICAgIH0KICAgIH0sCiAgICAvKioqDQogICAgICogQXNzaWducyBhIHJhbmRvbSBpZCB0byB0aGUgY2hhcnQNCiAgICAgKi8KICAgIHVwZGF0ZUNoYXJ0SWQ6IGZ1bmN0aW9uIHVwZGF0ZUNoYXJ0SWQoKSB7CiAgICAgIHZhciBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLnRvU3RyaW5nKCk7CiAgICAgIHZhciByYW5kb21JbnQgPSB0aGlzLmdldFJhbmRvbUludCgwLCBjdXJyZW50VGltZSk7CiAgICAgIHRoaXMuY2hhcnRJZCA9ICJkaXZfIi5jb25jYXQocmFuZG9tSW50KTsKICAgIH0sCiAgICBnZXRSYW5kb21JbnQ6IGZ1bmN0aW9uIGdldFJhbmRvbUludChtaW4sIG1heCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjsKICAgIH0sCiAgICBhbmltYXRlTGluZUNoYXJ0OiBmdW5jdGlvbiBhbmltYXRlTGluZUNoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICB2YXIgc2VxID0gMDsKICAgICAgdmFyIGR1cmF0aW9ucyA9IDUwMDsKICAgICAgdmFyIGRlbGF5cyA9IDgwOwogICAgICB0aGlzLmNoYXJ0Lm9uKCdkcmF3JywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnbGluZScgfHwgZGF0YS50eXBlID09PSAnYXJlYScpIHsKICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsKICAgICAgICAgICAgZDogewogICAgICAgICAgICAgIGJlZ2luOiA2MDAsCiAgICAgICAgICAgICAgZHVyOiA3MDAsCiAgICAgICAgICAgICAgZnJvbTogZGF0YS5wYXRoLmNsb25lKCkuc2NhbGUoMSwgMCkudHJhbnNsYXRlKDAsIGRhdGEuY2hhcnRSZWN0LmhlaWdodCgpKS5zdHJpbmdpZnkoKSwKICAgICAgICAgICAgICB0bzogZGF0YS5wYXRoLmNsb25lKCkuc3RyaW5naWZ5KCksCiAgICAgICAgICAgICAgZWFzaW5nOiBfdGhpcy4kQ2hhcnRpc3QuU3ZnLkVhc2luZy5lYXNlT3V0UXVpbnQKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICdwb2ludCcpIHsKICAgICAgICAgIHNlcSsrOwogICAgICAgICAgZGF0YS5lbGVtZW50LmFuaW1hdGUoewogICAgICAgICAgICBvcGFjaXR5OiB7CiAgICAgICAgICAgICAgYmVnaW46IHNlcSAqIGRlbGF5cywKICAgICAgICAgICAgICBkdXI6IGR1cmF0aW9ucywKICAgICAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgICAgIHRvOiAxLAogICAgICAgICAgICAgIGVhc2luZzogJ2Vhc2UnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHNlcSA9IDA7CiAgICB9LAogICAgYW5pbWF0ZUJhckNoYXJ0OiBmdW5jdGlvbiBhbmltYXRlQmFyQ2hhcnQoKSB7CiAgICAgIHZhciBzZXEgPSAwOwogICAgICB2YXIgZHVyYXRpb25zID0gNTAwOwogICAgICB2YXIgZGVsYXlzID0gODA7CiAgICAgIHRoaXMuY2hhcnQub24oJ2RyYXcnLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdiYXInKSB7CiAgICAgICAgICBzZXErKzsKICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsKICAgICAgICAgICAgb3BhY2l0eTogewogICAgICAgICAgICAgIGJlZ2luOiBzZXEgKiBkZWxheXMsCiAgICAgICAgICAgICAgZHVyOiBkdXJhdGlvbnMsCiAgICAgICAgICAgICAgZnJvbTogMCwKICAgICAgICAgICAgICB0bzogMSwKICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlJwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9tb3VudGVkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgQ2hhcnRpc3Q7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHRoaXMudXBkYXRlQ2hhcnRJZCgpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGltcG9ydCgnY2hhcnRpc3QnKTsKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgQ2hhcnRpc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICB0aGlzLiRDaGFydGlzdCA9IENoYXJ0aXN0LmRlZmF1bHQgfHwgQ2hhcnRpc3Q7CiAgICAgICAgICAgIHRoaXMuaW5pdENoYXJ0KCk7CiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICB9KSk7CiAgICBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgICByZXR1cm4gX21vdW50ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KICAgIHJldHVybiBtb3VudGVkOwogIH0oKQp9Ow=="},{"version":3,"names":["Card","name","components","props","chartType","type","String","default","chartOptions","Object","_default","chartData","labels","series","responsiveOptions","Array","data","chartId","$Chartist","chart","methods","initChart","chartIdQuery","concat","$emit","animateLineChart","animateBarChart","updateChartId","currentTime","Date","getTime","toString","randomInt","getRandomInt","min","max","Math","floor","random","_this","seq","durations","delays","on","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","mounted","_mounted","_asyncToGenerator","regeneratorRuntime","mark","_callee","Chartist","wrap","_callee$","_context","prev","next","sent","stop","apply","arguments"],"sources":["src/components/Cards/ChartCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\" v-if=\"$slots.header\">\r\n      <slot name=\"header\"></slot>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\r\n    </div>\r\n    <div class=\"card-footer\" v-if=\"$slots.footer\">\r\n      <slot name=\"footer\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import Card from './Card.vue'\r\n\r\n  export default {\r\n    name: 'chart-card',\r\n    components: {\r\n      Card\r\n    },\r\n    props: {\r\n      chartType: {\r\n        type: String,\r\n        default: 'Line' // Line | Pie | Bar\r\n      },\r\n      chartOptions: {\r\n        type: Object,\r\n        default: () => {\r\n          return {}\r\n        }\r\n      },\r\n      chartData: {\r\n        type: Object,\r\n        default: () => {\r\n          return {\r\n            labels: [],\r\n            series: []\r\n          }\r\n        }\r\n      },\r\n      responsiveOptions: [Object, Array]\r\n    },\r\n    data () {\r\n      return {\r\n        chartId: 'no-id',\r\n        $Chartist: null,\r\n        chart: null\r\n      }\r\n    },\r\n    methods: {\r\n      /***\r\n       * Initializes the chart by merging the chart options sent via props and the default chart options\r\n       */\r\n      initChart () {\r\n        var chartIdQuery = `#${this.chartId}`\r\n        this.chart = this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.responsiveOptions)\r\n        this.$emit('initialized', this.chart)\r\n        if (this.chartType === 'Line') {\r\n          this.animateLineChart()\r\n        }\r\n        if (this.chartType === 'Bar') {\r\n          this.animateBarChart()\r\n        }\r\n      },\r\n      /***\r\n       * Assigns a random id to the chart\r\n       */\r\n      updateChartId () {\r\n        const currentTime = new Date().getTime().toString()\r\n        const randomInt = this.getRandomInt(0, currentTime)\r\n        this.chartId = `div_${randomInt}`\r\n      },\r\n      getRandomInt (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n      },\r\n      animateLineChart () {\r\n        let seq = 0\r\n        let durations = 500\r\n        let delays = 80\r\n        this.chart.on('draw', (data) => {\r\n          if (data.type === 'line' || data.type === 'area') {\r\n            data.element.animate({\r\n              d: {\r\n                begin: 600,\r\n                dur: 700,\r\n                from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n                to: data.path.clone().stringify(),\r\n                easing: this.$Chartist.Svg.Easing.easeOutQuint\r\n              }\r\n            })\r\n          } else if (data.type === 'point') {\r\n            seq++\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            })\r\n          }\r\n        })\r\n        seq = 0\r\n      },\r\n      animateBarChart () {\r\n        let seq = 0\r\n        let durations = 500\r\n        let delays = 80\r\n        this.chart.on('draw', (data) => {\r\n          if (data.type === 'bar') {\r\n            seq++\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async mounted () {\r\n      this.updateChartId()\r\n      const Chartist = await import('chartist')\r\n      this.$Chartist = Chartist.default || Chartist\r\n      this.initChart()\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}